- name: Deploy and Configure a Flask Web Application with Docker
  hosts: ec2_servers
  become: yes

  tasks:
    - name: Update apt package cache to ensure latest package info
      ansible.builtin.apt:
        update_cache: yes

    - name: Install essential system dependencies for Docker setup
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Add the official Docker GPG key to verify downloads
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker's official repository for package installation
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        state: present

    - name: Update apt cache after adding Docker's repository
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Docker
      ansible.builtin.apt:
        name: docker-ce
        state: present

    - name: Ensure Docker is started and enabled
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Copy application files to server
      ansible.builtin.copy:
        src: /home/ubuntu/final_project-A1/web_page
        dest: /home/ubuntu/final_project-A1/web_page
        owner: "ubuntu"
        group: "ubuntu"
        mode: 0755

    - name: Build Docker image
      ansible.builtin.command:
        cmd: docker build -t simple-flask-app /home/ubuntu/final_project-A1/web_page
      args:
        chdir: /home/ubuntu/final_project-A1/web_page

    - name: Ensure the Flask Docker container is running and accessible
      ansible.builtin.docker_container:
        name: simple-flask-app
        image: simple-flask-app
        state: started
        restart_policy: always
        published_ports:
          - 8000:8000
